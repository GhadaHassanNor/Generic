/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generic;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author MAGIC
 * @param <E>
 */
public class AorD<E> extends javax.swing.JFrame {

    /**
     * Creates new form AorB
     */
    int b;
    public E[] array;
    public static final int capacity = 100;
    public AorD() {
        initComponents();
        array = (E[]) new Object[capacity];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        A = new javax.swing.JButton();
        D = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        A.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        A.setText("Ascending");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        D.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        D.setText("Dscending");
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        // TODO add your handling code here:
        Scanner sc;
        String s = "";
        String t;
        int i = 0;
        try {
            JFileChooser ch=new JFileChooser();
            FileNameExtensionFilter fil=new FileNameExtensionFilter(null, "txt");
            ch.setFileFilter(fil);
            ch.showOpenDialog(null);
            sc=new Scanner(ch.getSelectedFile());
            while(sc.hasNext()){
                 s += sc.nextLine() + " ";
            }
            for(int r=0;r<s.length();r++){
                t = "";
                while(r<s.length()&&!" ".equals(s.substring(r, r+1))){
                    t += s.charAt(r);
                    r++;
                }
                if(t!=null){
                    array[i] = (E) t;
                    i++;
                }
            }
            sc.close();
        } catch (FileNotFoundException ex) {
           System.out.println("Not found");
        }
        E[] list = (E[]) new Object[i];
        System.arraycopy(array, 0, list, 0, list.length);
        switch(b){
            case 1:{
                Bubble u = new Bubble();
                u.aBubble(list);
                break;
            }
            case 2:{
                Insertion n = new Insertion();
                n.aInsertion(list);
                break;
            }
            case 3:{
                Selection c = new Selection();
                c.aSelection(list);
                break;
            }
            case 4:{
                Merge m = new Merge();
                m.splitA(list);
                break;
            }
            case 5:{
                Quick q = new Quick();
                q.quickA(list);
                break;
            }
            default:{
                System.out.println("Error");
                System.exit(0);
                break;
            }
        }
        try{
            PrintWriter p = new PrintWriter("Ascending.txt");
            for(int l=0;l<list.length;l++){
                p.println(list[l]);
            }
            p.close();
            System.exit(0);
        }
        catch(FileNotFoundException ex){
            System.out.println("null");
        }
    }//GEN-LAST:event_AActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        // TODO add your handling code here:
        Scanner sc;
        String s = "";
        String t;
        int i = 0;
        try {
            JFileChooser ch=new JFileChooser();
            FileNameExtensionFilter fil=new FileNameExtensionFilter(null, "txt");
            ch.setFileFilter(fil);
            ch.showOpenDialog(null);
            sc=new Scanner(ch.getSelectedFile());
            while(sc.hasNext()){
                 s += sc.nextLine() + " ";
            }
            for(int r=0;r<s.length();r++){
                t = "";
                while(r<s.length()&&!" ".equals(s.substring(r, r+1))){
                    t += s.charAt(r);
                    r++;
                }
                if(t!=null){
                    array[i] = (E) t;
                    i++;
                }
            }
            sc.close();
        } catch (FileNotFoundException ex) {
           System.out.println("Not found");
        }
        E[] list = (E[]) new Object[i];
        System.arraycopy(array, 0, list, 0, list.length);
        switch(b){
            case 1:{
                Bubble u = new Bubble();
                u.dBubble(list);
                break;
            }
            case 2:{
                Insertion n = new Insertion();
                n.dInsertion(list);
                break;
            }
            case 3:{
                Selection c = new Selection();
                c.dSelection(list);
                break;
            }
            case 4:{
                Merge m = new Merge();
                m.splitD(list);
                break;
            }
            case 5:{
                Quick q = new Quick();
                q.quickD(list);
                break;
            }
            default:{
                System.out.println("Error");
                System.exit(0);
                break;
            }
        }
        try{
            PrintWriter p = new PrintWriter("Dscending.txt");
            for(int l=0;l<list.length;l++){
                p.println(list[l]);
            }
            p.close();
            System.exit(0);
        }
        catch(FileNotFoundException ex){
            System.out.println("null");
        }
    }//GEN-LAST:event_DActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AorD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AorD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AorD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AorD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AorD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton D;
    // End of variables declaration//GEN-END:variables
}
